---
dist: bionic
addons:
  apt:
    packages:
    - docker-ce
    - libssl-dev
    - libffi-dev
    - python3
    - python3-pip
    - python3-setuptools
    - python3-software-properties
    - python3-wheel

language: minimal

services:
  - docker

env:
  global:
    - IMAGE_NAMESPACE: coglinev3
    - IMAGE_NAME: alpine
  matrix:
    - IMAGE_TAG: 3.11-bash
      IMAGE_ALTERNATE_TAG: latest
    - IMAGE_TAG: 3.10-bash
    - IMAGE_TAG: 3.9-bash

install:
  # Install Ansible and Python Docker Module
  - pip3 install ansible docker

before_script:
  # Configure Ansible
  - cp .travis/ansible.cfg ~/.ansible.cfg
  - mkdir -p ~/.ansible && cp .travis/hosts ~/.ansible
  # Show Ansible version
  - ansible --version

script:
  # Build Docker image
  - ansible-playbook alpine-${IMAGE_TAG}.yml

after_success:
  - >
    echo Start a container from image
    ${IMAGE_NAMESPACE}/${IMAGE_NAME}:${IMAGE_TAG}
    && cid=$(docker run -d --rm --name check_python
    ${IMAGE_NAMESPACE}/${IMAGE_NAME}:${IMAGE_TAG}
    tail -f /dev/null)
  # show container os-release
  - docker exec ${cid} env TERM=xterm cat /etc/os-release
  # Verify Bash is available in the container
  - docker exec ${cid} env TERM=xterm bash --version
  # Stop the container
  - docker stop ${cid}

deploy:
  provider: script
  script: bash scripts/docker_push
  cleanup: false
  on:
    branch: develop
